package router

import (
	"context"
	"net/http"

	"github.com/bullockz21/beer_bot/internal/controller/telegram"
	"github.com/gin-gonic/gin"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/sirupsen/logrus"
)

// SetupRoutes –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã Gin –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–æ—É—Ç–µ—Ä.
func SetupRoutes(handler *telegram.Handler) *gin.Engine {
	// –°–æ–∑–¥–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–æ—É—Ç–µ—Ä Gin
	router := gin.Default()

	// –°–æ–∑–¥–∞–µ–º –≥—Ä—É–ø–ø—É –º–∞—Ä—à—Ä—É—Ç–æ–≤ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º /api/v1
	apiV1 := router.Group("/api/v1")
	{
		apiV1.POST("/webhook", func(c *gin.Context) {
			logrus.Info("üî• –í–µ–±—Ö—É–∫ –≤—ã–∑–≤–∞–Ω!")
			var update tgbotapi.Update
			if err := c.ShouldBindJSON(&update); err != nil {
				logrus.Errorf("‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ JSON: %v", err)
				c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
				return
			}
			logrus.Infof("‚úÖ Update –ø–æ–ª—É—á–µ–Ω: %+v", update)
			go handler.ProcessUpdate(context.Background(), update)
			c.JSON(http.StatusOK, gin.H{"status": "ok"})
		})

		// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç
		apiV1.GET("/ping", func(c *gin.Context) {
			c.JSON(http.StatusOK, gin.H{"message": "pong"})
		})
	}

	return router
}
